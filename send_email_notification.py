import os
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from datetime import datetime
from dotenv import load_dotenv
import requests 

load_dotenv()
# Check for environment variables directly (for Render)
sender_email = os.getenv('EMAIL')
sender_password = os.getenv('EMAIL_APP_PASSWORD')

if not sender_email or not sender_password:
    raise ValueError("Email or password not set in environment variables. Ensure they are configured correctly.")

def send_email(receiver_email, subject, body):
    # Create the email
    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = receiver_email
    msg['Subject'] = subject
    msg.attach(MIMEText(body, 'plain'))

    try:
        # Connect to the email server and send the email
        mail = smtplib.SMTP('smtp.gmail.com', 587)
        mail.ehlo()
        mail.starttls()
        mail.login(sender_email, sender_password)
        mail.sendmail(sender_email, receiver_email, msg.as_string())
        mail.close()

        print(f"Email sent successfully to {receiver_email}!")
    except smtplib.SMTPAuthenticationError:
        print('Authentication failed. Check your email credentials.')
    except smtplib.SMTPException as e:
        print(f'Failed to send email. Error: {e}')

# Notify registration
def notify_registration_to_admin(name, email, password):
    # Receiver's email
    receiver_email = "shaiksameerhussain2104@gmail.com"  # Replace with your desired recipient email

    # Subject of the email
    subject = "New User Registration Alert"

    # Registration time
    registration_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # Body of the email
    body = f"""
    A new user has registered on your platform: https://project-document-creator.onrender.com

    User Details:
    Name: {name}
    Email: {email}
    Password: {password}
    Registration Time: {registration_time}

    Do check this user's authenticity.

    Check user details in the database:
    https://console.firebase.google.com/project/project-document-creator/database/project-document-creator-default-rtdb/data
    """

    # Send the email
    send_email(receiver_email, subject, body)


# Notify login
def notify_login(email):
    # Receiver's email
    receiver_email = "shaiksameerhussain2104@gmail.com"  # Replace with your desired recipient email

    # Subject of the email
    subject = "User Login Alert"

    # Login time
    login_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # Body of the email
    body = f"""
    A user has logged in to your platform: https://project-document-creator.onrender.com

    User Details:
    Email: {email}
    Login Time: {login_time}

    Do check user activity if necessary.

    Check user details in the database:
    https://console.firebase.google.com/project/project-document-creator/database/project-document-creator-default-rtdb/data
    """

    # Send the email
    send_email(receiver_email, subject, body)


def notify_document_generation(email, project_description):
    """
    Sends an email notification when a user generates a document.

    Parameters:
        email (str): The email of the user who generated the document.
        project_description (str): The description of the project provided by the user.
    """
    # Receiver's email
    receiver_email = "shaiksameerhussain2104@gmail.com"  # Replace with your desired recipient email

    # Subject of the email
    subject = "Document Generation Notification"

    # Document generation time
    generation_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # Body of the email
    body = f"""
    A user has generated a document on your platform: https://project-document-creator.onrender.com

    User Details:
    Email: {email}
    Document Generation Time: {generation_time}

    Project Description:
    {project_description}

    Check user and document details in the database:
    https://console.firebase.google.com/project/project-document-creator/database/project-document-creator-default-rtdb/data
    """

    # Send the email
    send_email(receiver_email, subject, body)

import random
from datetime import datetime
from send_email_notification import send_email

# Generate OTP
def generate_otp():
    return random.randint(100000, 999999)

# Notify user with OTP during registration
def notify_registration(email, otp):
    """
    Sends an OTP email to the user for registration.
    
    Args:
        email (str): The email address of the recipient.
        otp (str): The One-Time Password generated by the backend.
    """
    # Subject of the email
    subject = "Your OTP for Registration"

    # Current time
    request_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # Body of the email
    body = f"""
    Dear User,

    You have initiated a registration process on our platform: https://project-document-creator.onrender.com.

    Here is your One-Time Password (OTP) for verification:
    OTP: {otp}

    Requested Time: {request_time}

    Please use this OTP to verify your email and complete the registration process.
    Note: This OTP is valid for 10 minutes.

    If you did not request this, please ignore this email.

    Regards,
    Team Project Document Creator
    """

    try:
        # Send the email
        send_email(email, subject, body)
        print(f"OTP sent successfully to {email}")
    except Exception as e:
        print(f"Error sending OTP email: {e}")
        raise


from flask import request

def get_geolocation(ip):
    # Call ipinfo.io API for geolocation data
    response = requests.get(f'https://ipinfo.io/{ip}/json')
    return response.json()

def notify_homepage_visit():
    # Get user IP address and user-agent
    user_ip = request.remote_addr
    user_agent = request.headers.get('User-Agent')

    # If the IP is 127.0.0.1 (localhost), handle it differently
    if user_ip == '127.0.0.1':
        city = 'Localhost'
        country = 'Localhost'
    else:
        # Get geolocation info for the IP
        geolocation_data = get_geolocation(user_ip)
        city = geolocation_data.get('city', 'Unknown')
        country = geolocation_data.get('country', 'Unknown')

    # Receiver's email
    receiver_email = "shaiksameerhussain2104@gmail.com"

    # Subject of the email
    subject = "User Visit Alert - Homepage Accessed"

    # Time of visit
    visit_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # Body of the email
    body = f"""
    A user has visited the homepage of your platform: https://project-document-creator.onrender.com

    Visit Time: {visit_time}
    User IP: {user_ip}
    User-Agent: {user_agent}
    Geolocation: {city}, {country}

    Do check user activity if necessary.
    """ 

    # Send the email
    send_email(receiver_email, subject, body)
